<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/Mishika Raj/Downloads/New Orders.db" readonly="0" foreign_keys="" case_sensitive_like="" temp_store="" wal_autocheckpoint="" synchronous=""/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="2528"/><column_width id="4" width="0"/></tab_structure><tab_browse><current_table name="0,0:"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ADDRESS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="124"/><column index="2" value="300"/><column index="3" value="300"/><column index="4" value="141"/><column index="5" value="124"/><column index="6" value="89"/><column index="7" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="CARTON" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="113"/><column index="2" value="52"/><column index="3" value="71"/><column index="4" value="77"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT P.PRODUCT_CLASS_CODE, P.PRODUCT_ID, P.PRODUCT_DESC,P.product_price,
CASE P.PRODUCT_CLASS_CODE 
WHEN 2050 THEN P.product_price + 2000 -- to increase price of 2050 product
WHEN 2051 THEN P.product_price + 500 -- to increase price of 2051 product WHEN 2052 THEN P.product_price + 600 -- to increase price of 2052 product
ELSE P.PRODUCT_PRICE
END 'CALCULATED_PRICE'
FROM PRODUCT P INNER JOIN PRODUCT_CLASS PC
ON P.PRODUCT_CLASS_CODE = PC.PRODUCT_CLASS_CODE ORDER BY P.PRODUCT_CLASS_CODE DESC;
--2. 
SELECT PC.PRODUCT_CLASS_DESC, P.PRODUCT_ID, P.PRODUCT_DESC, P.PRODUCT_QUANTITY_AVAIL,
CASE --For Electronics and Computer categories
WHEN P.PRODUCT_CLASS_CODE in (2050,2053) THEN
CASE
WHEN P.PRODUCT_QUANTITY_AVAIL =0 THEN 'Out of stock'
WHEN P.PRODUCT_QUANTITY_AVAIL &lt;=10 THEN 'Low stock'
WHEN (P.PRODUCT_QUANTITY_AVAIL &gt;=11 and P.PRODUCT_QUANTITY_AVAIL &lt;=30) THEN 'In stock' WHEN P.PRODUCT_QUANTITY_AVAIL &gt;=31 THEN 'Enough stock'
END
    --For Stationery and Clothes categories
WHEN P.PRODUCT_CLASS_CODE in (2052,2056) THEN
CASE
WHEN P.PRODUCT_QUANTITY_AVAIL =0 THEN 'Out of stock'
WHEN P.PRODUCT_QUANTITY_AVAIL &lt;=20 THEN 'Low stock'
WHEN (P.PRODUCT_QUANTITY_AVAIL &gt;=21 and P.PRODUCT_QUANTITY_AVAIL &lt;=80) THEN 'In stock' WHEN P.PRODUCT_QUANTITY_AVAIL &gt;=81 THEN 'Enough stock'
END
--Rest of the products
ELSE
CASE
WHEN P.PRODUCT_QUANTITY_AVAIL =0 THEN 'Out of stock'
WHEN P.PRODUCT_QUANTITY_AVAIL &lt;=15 THEN 'Low stock'
WHEN (P.PRODUCT_QUANTITY_AVAIL &gt;=16 and P.PRODUCT_QUANTITY_AVAIL &lt;=50) THEN 'In stock'
 
WHEN P.PRODUCT_QUANTITY_AVAIL &gt;=51 THEN 'Enough stock'
END
END INVENTORY_STATUS
FROM PRODUCT P INNER JOIN PRODUCT_CLASS PC 
ON P.PRODUCT_CLASS_CODE = PC.PRODUCT_CLASS_CODE ORDER BY P.PRODUCT_CLASS_CODE, P.PRODUCT_QUANTITY_AVAIL ASC;
--3.
SELECT A.COUNTRY, COUNT(CITY) COUNT_OF_CITIES
FROM ADDRESS A
GROUP BY A.COUNTRY
HAVING A.COUNTRY NOT IN ('USA','Malaysia') AND COUNT(CITY) &gt; 1 ORDER BY COUNT(CITY) DESC;
--4.
SELECT OC.CUSTOMER_ID,(OC.CUSTOMER_FNAME||' '||OC.CUSTOMER_LNAME) AS CUSTOMER_FULL_NAME,A.CITY, A.PINCODE,OI.ORDER_ID,
PC.PRODUCT_CLASS_DESC,P.PRODUCT_DESC,(OI.PRODUCT_QUANTITY*P.PRODUCT_PRICE) AS SUBTOTAL FROM 
ONLINE_CUSTOMER OC
INNER JOIN ADDRESS A ON OC.ADDRESS_ID = A.ADDRESS_ID
INNER JOIN ORDER_HEADER OH ON OH.CUSTOMER_ID = OC.CUSTOMER_ID 
INNER JOIN ORDER_ITEMS OI ON OI.ORDER_ID = OH.ORDER_ID
INNER JOIN PRODUCT P ON P.PRODUCT_ID = OI.PRODUCT_ID
INNER JOIN PRODUCT_CLASS PC ON PC.PRODUCT_CLASS_CODE = P.PRODUCT_CLASS_CODE
WHERE OH.ORDER_STATUS='Shipped' AND A.PINCODE NOT LIKE '%0%' -- Selecting Shipped orders and pincode without 0
ORDER BY CUSTOMER_FULL_NAME, SUBTOTAL;
--5.
SELECT OI.PRODUCT_ID, P.PRODUCT_DESC, SUM(OI.PRODUCT_QUANTITY) AS TOTAL_QUANTITY
FROM ORDER_ITEMS OI
INNER JOIN PRODUCT P ON P.PRODUCT_ID = OI.PRODUCT_ID 
WHERE OI.ORDER_ID IN ( SELECT DISTINCT ORDER_ID -- Sub query
FROM ORDER_ITEMS OI_S
WHERE PRODUCT_ID = 201)
AND OI.PRODUCT_ID != 201
GROUP BY OI.PRODUCT_ID
ORDER BY Total_Quantity DESC
LIMIT 1;
--6.
SELECT OC.CUSTOMER_ID, (OC.CUSTOMER_FNAME ||' '|| OC.CUSTOMER_LNAME) AS CUSTOMER_FULL_NAME, OC.CUSTOMER_EMAIL, OH.ORDER_ID,P.PRODUCT_DESC, OI.PRODUCT_QUANTITY,(OI.PRODUCT_QUANTITY*P.PRODUCT_PRICE) AS SUBTOTAL FROM ONLINE_CUSTOMER OC
INNER JOIN ADDRESS A ON OC.ADDRESS_ID = A.ADDRESS_ID
LEFT JOIN ORDER_HEADER OH ON OC.CUSTOMER_ID = OH.CUSTOMER_ID
LEFT JOIN ORDER_ITEMS OI ON OH.ORDER_ID = OI.ORDER_ID
LEFT JOIN PRODUCT P ON OI.PRODUCT_ID = P.PRODUCT_ID
LEFT JOIN PRODUCT_CLASS PC ON P.PRODUCT_CLASS_CODE = PC.PRODUCT_CLASS_CODE;



</sql><current_tab id="0"/></tab_sql></sqlb_project>
